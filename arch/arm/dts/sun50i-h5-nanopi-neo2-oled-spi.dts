/*
 * Copyright (C) 2017 Icenowy Zheng <icenowy@aosc.io>
 * Copyright (C) 2017 Jagan Teki <jteki@openedev.com>
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 *  a) This library is free software; you can redistribute it and/or
 *     modify it under the terms of the GNU General Public License as
 *     published by the Free Software Foundation; either version 2 of the
 *     License, or (at your option) any later version.
 *
 *     This library is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 * Or, alternatively,
 *
 *  b) Permission is hereby granted, free of charge, to any person
 *     obtaining a copy of this software and associated documentation
 *     files (the "Software"), to deal in the Software without
 *     restriction, including without limitation the rights to use,
 *     copy, modify, merge, publish, distribute, sublicense, and/or
 *     sell copies of the Software, and to permit persons to whom the
 *     Software is furnished to do so, subject to the following
 *     conditions:
 *
 *     The above copyright notice and this permission notice shall be
 *     included in all copies or substantial portions of the Software.
 *
 *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *     OTHER DEALINGS IN THE SOFTWARE.
 */

/dts-v1/;

#include "sun50i-h5.dtsi"

#include <dt-bindings/gpio/gpio.h>

/ {
	model = "FriendlyElec NanoPi H5";
	compatible = "friendlyarm,nanopi-neo2", "allwinner,sun50i-h5";

	aliases {
		serial0 = &uart0;
		i2c0 = &i2c_gpio;
		i2c5 = &r_i2c;
	};

	chosen {
		stdout-path = "serial0:115200n8";
	};

	reg_vcc3v3: vcc3v3 {
		compatible = "regulator-fixed";
		regulator-name = "vcc3v3";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
	};

	gpio_keys {
		compatible = "gpio-keys";
		pinctrl-names = "default";
		pinctrl-0 = <&sw_npi_neo_oled>;

		sw1 {
			label = "OLED_K1";
			gpios = <&pio 0 0 GPIO_ACTIVE_HIGH>;
		};

		sw2 {
			label = "OLED_K2";
			gpios = <&pio 0 2 GPIO_ACTIVE_HIGH>;
		};

		sw3 {
			label = "OLED_K3";
			gpios = <&pio 0 3 GPIO_ACTIVE_HIGH>;
		};
	};

	i2c_gpio: i2c-gpio@0 {
		compatible = "i2c-gpio";
		gpios = <&pio 0 12 GPIO_ACTIVE_HIGH>,
			<&pio 0 11 GPIO_ACTIVE_HIGH>;
		i2c-gpio,delay-us = <1>;
		status = "okay";
	};

	r_i2c: i2c@01f02400 {
		compatible = "allwinner,sun6i-a31-i2c";
		reg = <0x01f02400 0x400>;
		status = "okay";
		#address-cells = <1>;
		#size-cells = <0>;
	};
};

&pio {
	sw_npi_neo_oled: key_pins@0 {
		allwinner,pins = "PA0", "PA2", "PA3";
		allwinner,function = "gpio_in";
		allwinner,drive = <SUN4I_PINCTRL_10_MA>;
		allwinner,pull = <SUN4I_PINCTRL_NO_PULL>;
	};

	spi0_pins: spi0@0 {
		allwinner,pins = "PC0", "PC1", "PC2";
		allwinner,function = "spi0";
		allwinner,drive = <SUN4I_PINCTRL_10_MA>;
		allwinner,pull = <SUN4I_PINCTRL_NO_PULL>;
	};

	spi0_cs_pins: spi0_cs_pins {
		allwinner,pins = "PC3", "PA6";
		allwinner,function = "gpio_out";
		allwinner,drive = <SUN4I_PINCTRL_10_MA>;
		allwinner,pull = <SUN4I_PINCTRL_NO_PULL>;
	};
};

&ehci1 {
    status = "okay";
};

&ehci2 {
    status = "okay";
};

&ehci3 {
    status = "okay";
};

&ohci1 {
    status = "okay";
};

&ohci2 {
    status = "okay";
};

&ohci3 {
    status = "okay";
};

&mmc0 {
	compatible = "allwinner,sun50i-h5-mmc",
		     "allwinner,sun50i-a64-mmc",
		     "allwinner,sun5i-a13-mmc";
	pinctrl-names = "default";
	pinctrl-0 = <&mmc0_pins_a>, <&mmc0_cd_pin>;
	vmmc-supply = <&reg_vcc3v3>;
	bus-width = <4>;
	cd-gpios = <&pio 5 6 GPIO_ACTIVE_LOW>; /* PF6 */
	status = "okay";
};

&uart0 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart0_pins_a>;
	status = "okay";
};

&spi0 {
	pinctrl-names = "default";
	pinctrl-0 = <&spi0_pins>, <&spi0_cs_pins>;
	cs-gpios = <&pio 2 3 GPIO_ACTIVE_HIGH>, <&pio 0 6 GPIO_ACTIVE_HIGH>, <0>, <0>;
	status = "okay";

	spi-nor@0 {
		compatible = "jedec,spi-nor";
		spi-max-frequency = <24000000>;
		reg = <0>;
	};

	spi-tft@1 {
		compatible = "sitronix,st7735";
		spi-max-frequency = <24000000>;
		reg = <1>;
	};
};

&usbphy {
	status = "okay";
};

&emac {
	pinctrl-names = "default";
	pinctrl-0 = <&emac_rgmii_pins>;
	phy-mode = "rgmii";
	phy = <&phy1>;
	status = "okay";

	phy1: ethernet-phy@7 {
		reg = <7>;
	};
};

